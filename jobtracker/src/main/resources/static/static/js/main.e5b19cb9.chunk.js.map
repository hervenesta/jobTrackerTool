{"version":3,"sources":["securityUtils/setJWTToken.js","actions/securityActions.js","actions/types.js","components/layout/Header.js","components/job/JobItem.js","actions/jobActions.js","components/JobsBoard.js","components/Dashboard.js","components/job/Addjob.js","reducers/errorReducer.js","reducers/jobReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/UpdateJobs.js","components/layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","type","payload","Header","this","props","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","className","id","to","fullName","onClick","bind","userIsNotAuthenticated","data-toggle","data-target","Component","connect","state","JobItem","onDeleteClick","jobId","deleteJobItem","job","status","jobTitle","companyName","created_At","a","confirm","delete","JobsBoard","jobsArray","jobs_props","map","key","AppliedItems","InterviewItems","OfferItems","RejectedItems","i","length","push","Dashboard","errors","getJobs","JobBoardContent","jobs","role","JobBoardAlgorithm","get","res","data","Addjob","jobLocation","postURL","salary","jobDescription","onChange","e","setState","target","name","value","onSubmit","preventDefault","newJob","createJob","history","nextProps","classnames","placeholder","post","response","initialState","booleanActionPayload","combineReducers","action","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateJobs","match","params","updatedJob","updateJobItem","getJobItem","jobNotFound","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","path","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5b19cb9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => login request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract the token from res.data\n    const { token } = res.data;\n    // store the token in localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in the header\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducers\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded // we load the token with all the claims we put theres\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_JOBS = \"GET_JOBS\";\nexport const GET_JOB_ITEM = \"GET_JOB_ITEM\";\nexport const DELETE_JOB_ITEM = \"DELETE_JOB_ITEM\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\"> {user.fullName}</i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Simple Job Tracker\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteJobItem } from \"../../actions/jobActions\";\n\nclass JobItem extends Component {\n  onDeleteClick = jobId => {\n    this.props.deleteJobItem(jobId);\n  };\n  render() {\n    const { job } = this.props;\n    if (job.status === \"APPLIED\") {\n      return (\n        <div>\n          <div className=\"card mb-1 bg-light\">\n            {/* <div className=\"card-header text-primary\">ID:</div> */}\n            <div className=\"card-body bg-dark\">\n              <h5 className=\"card-title text-white\">{job.jobTitle}</h5>\n              <p className=\"card-text text-truncate text-white\">\n                {job.companyName}\n              </p>\n              <p className=\"card-text text-truncate text-white\">\n                Applied on {job.created_At}\n              </p>\n              <Link\n                to={`/updatejob/${job.jobId}`}\n                className=\"btn btn-primary mr-1 text-white\"\n              >\n                View/Update\n              </Link>\n              <button\n                className=\"btn btn-danger md-4 text-white\"\n                onClick={this.onDeleteClick.bind(this, job.jobId)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (job.status === \"INTERVIEW\") {\n      return (\n        <div>\n          <div className=\"card mb-1 bg-light\">\n            {/* <div className=\"card-header text-primary\">ID:</div> */}\n            <div className=\"card-body bg-primary\">\n              <h5 className=\"card-title text-white\">{job.jobTitle}</h5>\n              <p className=\"card-text text-truncate text-white\">\n                {job.companyName}\n              </p>\n              <p className=\"card-text text-truncate text-white\">\n                Applied on {job.created_At}\n              </p>\n              <Link\n                to={`/updatejob/${job.jobId}`}\n                className=\"btn btn-primary mr-1 text-white\"\n              >\n                View/Update\n              </Link>\n              <button\n                className=\"btn btn-danger md-4 text-white\"\n                onClick={this.onDeleteClick.bind(this, job.jobId)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (job.status === \"OFFER\") {\n      return (\n        <div>\n          <div className=\"card mb-1 bg-light\">\n            {/* <div className=\"card-header text-primary\">ID:</div> */}\n            <div className=\"card-body bg-success\">\n              <h5 className=\"card-title text-white\">{job.jobTitle}</h5>\n              <p className=\"card-text text-truncate text-white\">\n                {job.companyName}\n              </p>\n              <p className=\"card-text text-truncate text-white\">\n                Applied on {job.created_At}\n              </p>\n              <Link\n                to={`/updatejob/${job.jobId}`}\n                className=\"btn btn-primary mr-1 text-white\"\n              >\n                View/Update\n              </Link>\n              <button\n                className=\"btn btn-danger md-4 text-white\"\n                onClick={this.onDeleteClick.bind(this, job.jobId)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"card mb-1 bg-light\">\n          {/* <div className=\"card-header text-primary\">ID:</div> */}\n          <div className=\"card-body bg-danger\">\n            <h5 className=\"card-title text-white\">{job.jobTitle}</h5>\n            <p className=\"card-text text-truncate text-white\">\n              {job.companyName}\n            </p>\n            <p className=\"card-text text-truncate text-white\">\n              Applied on {job.created_At}\n            </p>\n            <Link\n              to={`/updatejob/${job.jobId}`}\n              className=\"btn btn-primary mr-1\"\n            >\n              View/Update\n            </Link>\n            <button\n              className=\"btn btn-danger md-4\"\n              onClick={this.onDeleteClick.bind(this, job.jobId)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nJobItem.propTypes = {\n  deleteJobItem: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteJobItem })(JobItem);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_JOBS, GET_JOB_ITEM, DELETE_JOB_ITEM } from \"./types\";\n\nexport const createJob = (job, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/job\", job);\n    history.push(\"/dashboard\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getJobs = () => async dispatch => {\n  const res = await axios.get(\"/api/job/all\");\n  dispatch({\n    type: GET_JOBS,\n    payload: res.data\n  });\n};\n\nexport const getJobItem = (jobId, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/job/${jobId}`);\n    dispatch({\n      type: GET_JOB_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const updateJobItem = (job, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/job\", job);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteJobItem = jobId => async dispatch => {\n  if (\n    window.confirm(\n      `you're about to delete job ID ${jobId}, this action is irreversible.`\n    )\n  ) {\n    await axios.delete(`/api/job/${jobId}`);\n    dispatch({\n      type: DELETE_JOB_ITEM,\n      payload: jobId\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport JobItem from \"./job/JobItem\";\n\nclass JobsBoard extends Component {\n  render() {\n    const { jobs_props } = this.props;\n    const jobsArray = jobs_props.map(job => (\n      <JobItem key={job.jobId} job={job} />\n    ));\n\n    let AppliedItems = [];\n    let InterviewItems = [];\n    let OfferItems = [];\n    let RejectedItems = [];\n    // console.log(jobsArray);\n    for (let i = 0; i < jobsArray.length; ++i) {\n      if (jobsArray[i].props.job.status === \"APPLIED\") {\n        AppliedItems.push(jobsArray[i]);\n      }\n      if (jobsArray[i].props.job.status === \"INTERVIEW\") {\n        InterviewItems.push(jobsArray[i]);\n      }\n      if (jobsArray[i].props.job.status === \"OFFER\") {\n        OfferItems.push(jobsArray[i]);\n      }\n      if (jobsArray[i].props.job.status === \"REJECTED\") {\n        RejectedItems.push(jobsArray[i]);\n      }\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-3\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-dark text-white\">\n                  <h3>APPLIED</h3>\n                  <p>{AppliedItems.length} </p>\n                </div>\n              </div>\n              {AppliedItems}\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-primary text-white\">\n                  <h3>INTERVIEW</h3>\n                  <p>{InterviewItems.length} </p>\n                </div>\n              </div>\n              {InterviewItems}\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-success text-white\">\n                  <h3>OFFER</h3>\n                  <p>{OfferItems.length} </p>\n                </div>\n              </div>\n              {OfferItems}\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-danger text-white\">\n                  <h3>REJECTED</h3>\n                  <p>{RejectedItems.length} </p>\n                </div>\n              </div>\n              {RejectedItems}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobsBoard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getJobs } from \"../actions/jobActions\";\nimport JobsBoard from \"./JobsBoard\";\n\nclass Dashboard extends Component {\n  state = {\n    errors: {}\n  };\n\n  componentDidMount() {\n    this.props.getJobs();\n  }\n\n  render() {\n    const { jobs } = this.props.job;\n    let JobBoardContent;\n\n    const JobBoardAlgorithm = jobs => {\n      if (jobs.length < 1) {\n        return (\n          <div className=\"alert alert-info text-center\" role=\"alert\">\n            No Jobs on this board.\n          </div>\n        );\n      } else {\n        return <JobsBoard jobs_props={jobs} />;\n      }\n    };\n\n    JobBoardContent = JobBoardAlgorithm(jobs);\n    return (\n      <div>\n        <div className=\"container\">\n          <Link className=\"btn btn-primary mb-3\" to=\"/addjob\">\n            <i className=\"fas fa-plus-circle\"> Add Job</i>\n          </Link>\n          <div className=\"btn btn-primary mb-3 ml-4\">{jobs.length} jobs</div>\n          <br />\n          <hr />\n          {JobBoardContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  job: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\nexport default connect(mapStateToProps, { getJobs })(Dashboard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { createJob } from \"../../actions/jobActions\";\n\nclass Addjob extends Component {\n  state = {\n    jobTitle: \"\",\n    companyName: \"\",\n    jobLocation: \"\",\n    postURL: \"\",\n    salary: 0.0,\n    jobDescription: \"\",\n    status: \"\",\n    errors: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newJob = {\n      jobTitle: this.state.jobTitle,\n      companyName: this.state.companyName,\n      postURL: this.state.postURL,\n      jobLocation: this.state.jobLocation,\n      salary: this.state.salary,\n      jobDescription: this.state.jobDescription,\n      status: this.state.status\n    };\n    this.props.createJob(newJob, this.props.history);\n    // because we render this component with Router, it passes this props (history)\n    // so that we can grab it here\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to=\"/dashboard\" className=\"btn btn-green\">\n                Back to Dashboard\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Job</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobTitle\n                    })}\n                    name=\"jobTitle\"\n                    placeholder=\"job title\"\n                    value={this.state.jobTitle}\n                    onChange={this.onChange}\n                  />\n                  {errors.jobTitle && (\n                    <div className=\"invalid-feedback\">{errors.jobTitle}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.companyName\n                    })}\n                    name=\"companyName\"\n                    placeholder=\"Company Name\"\n                    value={this.state.companyName}\n                    onChange={this.onChange}\n                  />\n                  {errors.companyName && (\n                    <div className=\"invalid-feedback\">{errors.companyName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"postURL\"\n                    placeholder=\"post url\"\n                    value={this.state.postURL}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"salary\"\n                    placeholder=\"salary\"\n                    value={this.state.salary}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobLocation\n                    })}\n                    name=\"jobLocation\"\n                    placeholder=\"job location\"\n                    value={this.state.jobLocation}\n                    onChange={this.onChange}\n                  />\n                  {errors.jobLocation && (\n                    <div className=\"invalid-feedback\">{errors.jobLocation}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobDescription\n                    })}\n                    placeholder=\"job description\"\n                    name=\"jobDescription\"\n                    value={this.state.jobDescription}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.jobDescription && (\n                    <div className=\"invalid-feedback\">\n                      {errors.jobDescription}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"APPLIED\">APPLIED</option>\n                    <option value=\"INTERVIEW\">INTERVIEW</option>\n                    <option value=\"OFFER\">OFFER</option>\n                    <option value=\"REJECTED\">REJECTED</option>\n                  </select>\n                  {errors.status && (\n                    <div className=\"invalid-feedback\">{errors.status}</div>\n                  )}\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddjob.propTypes = {\n  createJob: PropTypes.func.isRequired, // this is a required prop type for this component to work properly\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createJob })(Addjob);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_JOBS, GET_JOB_ITEM, DELETE_JOB_ITEM } from \"../actions/types\";\n\nconst initialState = {\n  jobs: [],\n  job: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_JOBS:\n      return {\n        ...state,\n        jobs: action.payload\n      };\n    case GET_JOB_ITEM:\n      return {\n        ...state,\n        job: action.payload\n      };\n    case DELETE_JOB_ITEM:\n      return {\n        ...state,\n        jobs: state.jobs.filter(job => job.jobId !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport jobReducer from \"./jobReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  job: jobReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n// redux-thunk is the middlewsare used to dispatch the reducer to the redux store\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\n//set up the store so that it works with chrome, redux extension\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getJobItem, updateJobItem } from \"../actions/jobActions\";\n\nclass UpdateJobs extends Component {\n  state = {\n    jobId: this.props.match.params.jobId,\n    jobTitle: \"\",\n    companyName: \"\",\n    postURL: \"\",\n    jobLocation: \"\",\n    salary: 0.0,\n    jobDescription: \"\",\n    created_At: \"\",\n    status: \"\",\n    errors: {}\n  };\n\n  componentDidMount() {\n    const { jobId } = this.props.match.params;\n    this.props.getJobItem(jobId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      jobId,\n      jobTitle,\n      companyName,\n      postURL,\n      jobLocation,\n      salary,\n      jobDescription,\n      created_At,\n      status\n    } = nextProps.job;\n\n    this.setState({\n      jobId,\n      jobTitle,\n      companyName,\n      postURL,\n      jobLocation,\n      salary,\n      jobDescription,\n      created_At,\n      status\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const updatedJob = {\n      jobId: this.state.jobId,\n      jobTitle: this.state.jobTitle,\n      companyName: this.state.companyName,\n      postURL: this.state.postURL,\n      jobLocation: this.state.jobLocation,\n      salary: this.state.salary,\n      jobDescription: this.state.jobDescription,\n      created_At: this.state.created_At,\n      status: this.state.status\n    };\n    this.props.updateJobItem(updatedJob, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    if (errors.jobId) {\n      return (\n        <div className=\"container\">\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\n            {errors.jobId}\n          </div>\n        </div>\n      );\n    } else if (errors.jobNotFound) {\n      return (\n        <div className=\"container\">\n          <div className=\"alert alert-danger text-center \" role=\"alert\">\n            {errors.jobNotFound}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to=\"/dashboard\" className=\"btn btn-green\">\n                Back to Dashboard\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Job</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobTitle\n                    })}\n                    name=\"jobTitle\"\n                    placeholder=\"job title\"\n                    value={this.state.jobTitle}\n                    onChange={this.onChange}\n                  />\n                  {errors.jobTitle && (\n                    <div className=\"invalid-feedback\">{errors.jobTitle}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.companyName\n                    })}\n                    name=\"companyName\"\n                    placeholder=\"Company Name\"\n                    value={this.state.companyName}\n                    onChange={this.onChange}\n                  />\n                  {errors.companyName && (\n                    <div className=\"invalid-feedback\">{errors.companyName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"postURL\"\n                    placeholder=\"post url\"\n                    value={this.state.postURL}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"salary\"\n                    placeholder=\"salary\"\n                    value={this.state.salary}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobLocation\n                    })}\n                    name=\"jobLocation\"\n                    placeholder=\"job location\"\n                    value={this.state.jobLocation}\n                    onChange={this.onChange}\n                  />\n                  {errors.jobLocation && (\n                    <div className=\"invalid-feedback\">{errors.jobLocation}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.jobDescription\n                    })}\n                    placeholder=\"job description\"\n                    name=\"jobDescription\"\n                    value={this.state.jobDescription}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.jobDescription && (\n                    <div className=\"invalid-feedback\">\n                      {errors.jobDescription}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"APPLIED\">APPLIED</option>\n                    <option value=\"INTERVIEW\">INTERVIEW</option>\n                    <option value=\"OFFER\">OFFER</option>\n                    <option value=\"REJECTED\">REJECTED</option>\n                  </select>\n                  {errors.status && (\n                    <div className=\"invalid-feedback\">{errors.status}</div>\n                  )}\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateJobs.propTypes = {\n  getJobItem: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired,\n  updateJobItem: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job.job,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getJobItem, updateJobItem })(\n  UpdateJobs\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Simple Job Tracker</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-secondary mr-2 \" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    fullName: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    errors: {}\n  };\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"full name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address(username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {}\n  };\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(LoginRequest);\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//the provider is how we define the store we're gonna be using our app\nimport { Provider } from \"react-redux\";\nimport Header from \"./components/layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport Addjob from \"./components/job/Addjob\";\nimport store from \"./store\";\nimport UpdateJobs from \"./components/UpdateJobs\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  //app.js is the meeting place for all routes. any time we refresh the page we want to keep the token in the store\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    //when we use react router to render, that passes a set of props\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/\" component={Header} />\n          {\n            // public route\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //private route\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addjob\" component={Addjob} />\n            <SecuredRoute\n              exact\n              path=\"/updatejob/:jobId\"\n              component={UpdateJobs}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}